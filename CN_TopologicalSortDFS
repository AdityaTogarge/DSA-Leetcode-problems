//Topological Sort
//Coding Ninja:https://www.naukri.com/code360/problems/topological-sort_982938?leftPanelTabValue=SUBMISSION&count=25&page=1&search=topolo&sort_entity=order&sort_order=ASC&customSource=studio_nav

#include <bits/stdc++.h> 

void TPSortDFS(int node,vector<bool> &vis,stack<int> &s,unordered_map<int,list<int>> &adj)
{
    vis[node]=true;

    for(auto nei:adj[node])
    {
        if(!vis[nei])
        {
            TPSortDFS(nei,vis,s,adj);
        }
    }
    s.push(node);
}
vector<int> topologicalSort(vector<vector<int>> &edges, int v, int e)  {
    // Write your code here
    unordered_map<int,list<int>> adj;
    for(int i=0;i<e;i++)
    {
        int u=edges[i][0];
        int v=edges[i][1];

        adj[u].push_back(v);
    }

   vector<bool> vis(v, false);
    stack<int> s;

    for(int i=0;i<v;i++)
    {
        if(!vis[i])
        {
            TPSortDFS(i,vis,s,adj);
        }
    }
    vector<int> ans;
    while(!s.empty())
    {
        ans.push_back(s.top());
        s.pop();
    }
    return ans;
}
